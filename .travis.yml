language: c

sudo : false

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng
            - libfftw3-dev

env:
    global:
        - PYTHON_VERSION=3.7
        - NUMPY_VERSION=1.17
        - ASTROPY_VERSION=stable
        - MAIN_CMD='python setup.py'
        - SETUP_CMD='test'
        - PIP_DEPENDENCIES='git+https://github.com/dendrograms/astrodendro.git git+https://github.com/radio-astro-tools/radio-beam.git git+https://github.com/radio-astro-tools/spectral-cube.git'
        - EVENT_TYPE='pull_request push'

        - CONDA_CHANNELS='astropy-ci-extras astropy'
        - SETUP_XVFB=True

        - CONDA_DEPENDENCIES='scipy matplotlib pandas statsmodels scikit-learn scikit-image cython'

        - MPLBACKEND="Agg"

    matrix:
        - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.4 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.6 SETUP_CMD='egg_info'

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:
        # Try MacOS X
        # - os: osx
          # env: SETUP_CMD='test'

        # Do a coverage test.
        - os: linux
          env: SETUP_CMD='test --coverage'
               PIP_DEPENDENCIES='emcee pyfftw git+https://github.com/dendrograms/astrodendro.git git+https://github.com/radio-astro-tools/spectral-cube.git git+https://github.com/radio-astro-tools/radio-beam.git'
        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - os: linux
          env: SETUP_CMD='build_docs -w'
               CONDA_DEPENDENCIES='sip<4.19 pytest<3.9.3 scipy matplotlib pandas statsmodels scikit-learn mock sphinx_bootstrap_theme cython sphinx_astropy'

        # Now try Astropy dev and LTS vesions with the latest 3.x and 2.7.
        # astropy dev is now >=3.5 only
        # - os: linux
        #   env: PYTHON_VERSION=2.7 ASTROPY_VERSION=development
        #        EVENT_TYPE='pull_request push cron'
        - os: linux
          env: ASTROPY_VERSION=development
               EVENT_TYPE='pull_request push cron'
        # - os: linux
        #   env: PYTHON_VERSION=2.7 ASTROPY_VERSION=lts NUMPY_VERSION=1.16
        - os: linux
          env: ASTROPY_VERSION=lts

        # Try all python versions and Numpy versions. Since we can assume that
        # the Numpy developers have taken care of testing Numpy with different
        # versions of Python, we can vary Python and Numpy versions at the same
        # time.

        # - os: linux
        #   env: PYTHON_VERSION=3.5 NUMPY_VERSION=1.14 ASTROPY_VERSION=LTS
        # - os: linux
        #   env: PYTHON_VERSION=3.6 NUMPY_VERSION=1.15 ASTROPY_VERSION=LTS
        - os: linux
          env: PYTHON_VERSION=3.6 NUMPY_VERSION=1.16 ASTROPY_VERSION=LTS

        # Try numpy pre-release
        - os: linux
          env: NUMPY_VERSION=prerelease
               EVENT_TYPE='pull_request push cron'

install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh

script:
   - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == *coverage* ]]; then coveralls --rcfile='turbustat/tests/coveragerc'; fi